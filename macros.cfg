#####################################################################
# Conditional Homing
#####################################################################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}


# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}


# [gcode_macro ZCG28]
# gcode:
#     {% if "z" not in printer.toolhead.homed_axes %}
#         Z_ENDSTOP_CALIBRATE
#     {% endif %}



#####################################################################
# Print Start / End
#####################################################################



[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  # {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}  

    M117 Heating    
    M190 S{target_bed}             # Sets the target temp for the bed
    M109 S150                      ; Wait for nozzle to heat to 150C - soften filament, but no oozing.    
    WLED_HEATING
    M117 Homing
    CG28
    M117 Leveling
    Z_TILT_ADJUST     
    G28 Z                          # Homes Z again after z_tilt_adjust
    M117 Meshing    
    BED_MESH_CALIBRATE             ; bed mesh
#    clean_nozzle
    SET_FILAMENT_SENSOR SENSOR=BTT_Filament_Sensor ENABLE=1
    M117 Heating nozzle
    M109 S{target_extruder}        # Heats the nozzle to printing temp
    M117 Prime Line...
    PRIME_LINE                     ; print prime line
    WLED_ON
    M117 Printing

[gcode_macro PRINT_END]
gcode:
    M117 Complete
    SET_FILAMENT_SENSOR SENSOR=BTT_Filament_Sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z10 F3000                   ; move nozzle up 10mm
    G90                            ; absolute positioning
    G0  X240 Y240 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    #M84  
    M117 Print Finished!
    

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Screw_tilt_adjust if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

# [gcode_macro PRINT_START]
# gcode:
#   # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
#   {% set target_bed = params.BED|int %}
#   {% set target_extruder = params.EXTRUDER|int %}
#   {% set target_chamber = params.CHAMBER|default("40")|int %}
#   {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
#   {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

#   # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
#   STATUS_HOMING         # Sets SB-leds to homing-mode
#   G28                   # Full home (XYZ)
#   G90                   # Absolut position

#   ##  Uncomment for bed mesh (1 of 2)
#   #BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

#   # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
#   {% if params.BED|int > 90 %}
#     SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#     STATUS_HEATING                                      # Sets SB-leds to heating-mode
#     M106 S255                                           # Turns on the PT-fan

#     ##  Uncomment if you have a Nevermore.
#     #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

#     G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#     M190 S{target_bed}                                  # Sets the target temp for the bed
#     SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
#     TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

#   # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
#   {% else %}
#     SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
#     STATUS_HEATING                                      # Sets SB-leds to heating-mode
#     G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
#     M190 S{target_bed}                                  # Sets the target temp for the bed
#     SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
#     G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
#   {% endif %}

#   # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
#   SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
#   M109 S150                                    # Heats the nozzle to 150c

#   ##  Uncomment for Trident (screw_tilt_adjust)
#   SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
#   STATUS_LEVELING                          # Sets SB-leds to leveling-mode
#   Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
#   G28 Z                                    # Homes Z again after z_tilt_adjust

 
#   ##  Uncomment for bed mesh (2 of 2)
#   SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
#   STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
#   #bed_mesh_calibrate                 # Starts bed mesh

#   # Heats up the nozzle up to target via data from slicer
#   SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
#   STATUS_HEATING                                                # Sets SB-leds to heating-mode
#   G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
#   M107                                                          # Turns off partcooling fan
#   M109 S{target_extruder}                                       # Heats the nozzle to printing temp

#   # Gets ready to print by doing a purge line and updating the SB-leds
#   SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
#   STATUS_PRINTING                                  # Sets SB-leds to printing-mode
#   G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
#   G0 Z0.4                                          # Raises Z to 0.4
#   G91                                              # Incremental positioning 
#   G1 X100 E20 F1000                                # Purge line
#   G90                                              # Absolut position



#####################################################################
# Pause / Resume / Cancel
#####################################################################

# Pause and park toolhead at front center. Z hop by 10mm.
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    WLED_PAUSE
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                  ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                             ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}   ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=BTT_Filament_Sensor ENABLE=0                             ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                         ; save current print position for resume                
        BASE_PAUSE                                                                          ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}      ; check that zhop doesn't exceed z max
            G91                                                                             ; relative positioning
            G1 Z{z} F900                                                                    ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                 ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                 ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500 ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                     ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                             ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                      ; set timeout to 12 hours
        SET_LED_EFFECT EFFECT=yellow_pause
    {% endif %}


# Return Z hop back down, prime nozzle, resume print.
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    WLED_ON
    # Parameters
    {% set e = params.E|default(2.5)|int %}
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=BTT_Filament_Sensor ENABLE=1                                                          ; enable filament sensor
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                      ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                                                            ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                                                         ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                                                              ; relative positioning
        M83                                                                                                              ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                             
            G1 Z{zhop * -1} E{e} F900                                                                                    ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                                                         ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=100                                                             ; restore position
        BASE_RESUME                                                                                                      ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
	WLED_ON
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT



#####################################################################
# Bed Mesh
#####################################################################

## Simple example macro to perform a bed mesh calibration by wrapping it in
## ATTACH_PROBE/DOCK_PROBE macros.
## For a more complex example that probes the area that will be printed, see
## https://github.com/blalor/vcore3-ratos-config/blob/50e757ec32e085bedb3b9fa317581f9aa1913dd2/euclid.cfg#L230-L305

[bed_mesh]
mesh_min: 10,10
mesh_max: 240,240
# mesh_min: 12,25
# mesh_max: 238,210
speed: 300
horizontal_move_z: 10
probe_count: 5,5
algorithm: bicubic
#relative_reference_index: 12
#   FOLLOW THE FORUMULA FOR relative_reference_index, for example:
#   [(7x7)-1] / 2 = 24
#   [(5x5)-1] / 2 = 12
fade_start: 1
#   Default is 1.0.
fade_end: 10
#   Default is 0.0, which disables fade.
fade_target: 0
#   The z position in which fade should converge.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
split_delta_z: 0.0125
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
bicubic_tension: 0.2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_ORIG
gcode:
    WLED_MESH
    BED_MESH_CALIBRATE_ORIG
    WLED_ON



#####################################################################
# Z Tilt / Calibrate Z
#####################################################################

[gcode_macro Z_TILT_ADJUST]
# description: modified Z_TILT_ADJUST
rename_existing: Z_TILT_ADJUST_ORIG
gcode:
     WLED_Z
     Z_TILT_ADJUST_ORIG
     PARKBED
     WLED_ON



#####################################################################
# Filament
#####################################################################

# Disable filament sensor 1 sec after startup, only enable during prints (in PRINT_START/PRINT_END, and in PAUSE/RESUME)
[delayed_gcode DISABLEFILAMENTMOTIONSENSOR]   
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=BTT_Filament_Sensor ENABLE=0


[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    M83                                   ; set extruder to relative
    G1 E10 F600                           ; extrude a little to soften tip 
    G1 -E120 F1800                        ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT


[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    M83 ; set extruder to relative
    G1 E90 F600
    RESTORE_GCODE_STATE NAME=LOADFILAMENT


[gcode_macro HOT_UNLOAD_FILAMENT]
gcode:
    # Parameters
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    EXTUDERFRONT
    M109 S{t}
    UNLOAD_FILAMENT


[gcode_macro HOT_LOAD_FILAMENT]
gcode:
    # Parameters
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    EXTUDERFRONT
    M109 S{t}
    LOAD_FILAMENT


# Filament runout / change alias    
[gcode_macro M600]
gcode:
    PAUSE



#####################################################################
# Parking
#####################################################################

# Park front center
[gcode_macro PARKFRONT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT


# Park center, but low down
[gcode_macro PARKCENTERLOW]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKCENTERLOW
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z165 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKCENTERLOW


# Park top rear left
[gcode_macro PARKREAR]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500    
    RESTORE_GCODE_STATE NAME=PARKCENTER
    
# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKBED
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKBED


# Park extruder for filament change
[gcode_macro EXTUDERFRONT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=EXTUDERFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F19500    
    RESTORE_GCODE_STATE NAME=EXTUDERFRONT



#####################################################################
# Config Backup
#####################################################################

#[gcode_shell_command backup_cfg]
#command: sh /home/pi/klipper_config/autocommit.sh
#timeout: 30.
#verbose: True


#[gcode_macro BACKUP_CFG]
#gcode:
#    RUN_SHELL_COMMAND CMD=backup_cfg



#####################################################################
# Miscellaneous 
#####################################################################

[gcode_macro PRIME_LINE]
gcode: 
    G92 E0                         ; zero/reset extruder
    G1 X5 Y20 Z0.3 F18000          ; move to start position
    G1 E+15 F150                   ; extrude to put the pressure (-20 from purge macro)
    G92 E0

    G1 X2.2 Y200 Z0.25 F1500 E10   ; extrude the first line
    G1 Z2.0 F3000                  ; move nozzle up and retract tiny bit
    G92 E0 



[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    M117 Homing
    G28
    M117 Leveling
    Z_TILT_ADJUST     
    G28


[gcode_macro RESET_EXTRUDER]
gcode:
    G92 E0                         ; reset extruder
    G1 Z10 F3000                   ; move nozzle up 10mm
    G90                            ; absolute positioning
    G0  X300 Y350 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    #M84
    M117 Finished
    
