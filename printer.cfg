# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Leadscrew Rotation Distance          [stepper_z], [stepper_z1], [stepper_z2]
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


[include mainsail.cfg]
[include thermistors.cfg]
[include fans.cfg]
[include bed_heater.cfg]
[include wled.cfg]
[include macros.cfg]
[include EBBCan.cfg]
[include stealthburner_leds.cfg]
[include probe.cfg]
[include filament_runout.cfg]
[include config_backup.cfg]
#[include z_calibration.cfg]



[exclude_object]


[idle_timeout]
timeout: 7200


[extruder]
max_extrude_only_distance: 150.0



#####################################################################
#  MCU
#####################################################################

## Raspberry Pi 4
[mcu rpi]
serial: /tmp/klipper_host_mcu


## Octopus Pro 1.1
[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_19002D001350565843333620-if00
restart_method: command
##--------------------------------------------------------------------



[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 5000             
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


[input_shaper]
#shaper_freq_x: 70.0
#shaper_type_x: mzv
#shaper_freq_y: 47.6
#shaper_type_y: zv



#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan: PB6
position_min: 0

##--------------------------------------------------------------------

position_endstop: 255
position_max: 255
homing_speed: 75   #Max 100
homing_retract_dist: 5
homing_positive_dir: true


[tmc5160 stepper_x]
cs_pin: PC4
#   The pin corresponding to the TMC5160 chip select line. This pin
#   will be set to low at the start of SPI messages and raised to high
#   after the message completes. This parameter must be provided.
#spi_speed:
#spi_bus:
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
#   See the "common SPI settings" section for a description of the
#   above parameters.
#chain_position:
#chain_length:
#   These parameters configure an SPI daisy chain. The two parameters
#   define the stepper position in the chain and the total chain length.
#   Position 1 corresponds to the stepper that connects to the MOSI signal.
#   The default is to not use an SPI daisy chain.
interpolate: False
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). The default is True.
run_current: 1.25
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
sense_resistor: 0.075
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.075 ohms.
stealthchop_threshold: 0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.



##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0

##--------------------------------------------------------------------

position_endstop: 255
position_max: 255
homing_speed: 75  #Max 100
homing_retract_dist: 5
homing_positive_dir: true


[tmc5160 stepper_y]
cs_pin: PD11
#   The pin corresponding to the TMC5160 chip select line. This pin
#   will be set to low at the start of SPI messages and raised to high
#   after the message completes. This parameter must be provided.
#spi_speed:
#spi_bus:
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
#   See the "common SPI settings" section for a description of the
#   above parameters.
#chain_position:
#chain_length:
#   These parameters configure an SPI daisy chain. The two parameters
#   define the stepper position in the chain and the total chain length.
#   Position 1 corresponds to the stepper that connects to the MOSI signal.
#   The default is to not use an SPI daisy chain.
interpolate: False
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). The default is True.
run_current: 1.25
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
sense_resistor: 0.075
#   The resistance (in ohms) of the motor sense resistor. The default
#   is 0.075 ohms.
stealthchop_threshold: 0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.



#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4    
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
## All builds use same Max Z
position_max: 230
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0



##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0



##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0




#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################


# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:175,175
# speed:100
# z_hop:10


[homing_override]
axes: z
set_position_z: 0
gcode:
  G90
  G0 Z5 F600
  G28 X Y
  G0 X125 Y125 F6600

  G28 Z
  G0 Z10 F3600
  G0 X125 Y125 F6600


[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    30, 5
    125, 195
    220, 5

speed: 300
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075



#position_endstop = -0.590

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 1.248
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.104
#*# pid_ki = 4.232
#*# pid_kd = 57.153
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 34.945
#*# pid_ki = 1.287
#*# pid_kd = 237.190
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.021875, 0.011250, 0.029375, 0.044375, 0.043125
#*# 	  -0.000000, 0.002500, 0.022500, 0.057500, 0.100625
#*# 	  -0.040625, -0.029375, 0.001875, 0.060625, 0.085625
#*# 	  -0.055625, -0.007500, 0.035625, 0.103125, 0.137500
#*# 	  -0.044375, -0.002500, 0.060000, 0.142500, 0.120625
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 4
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 240.0
#*# mesh_x_pps = 4
#*# max_x = 240.0
#*#
#*# [probe]
#*# z_offset = -0.815
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 69.2
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 67.6
